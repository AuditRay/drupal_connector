<?php

/**
 * @file
 * Contains monit.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().s
 */
function monit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the monit module.
    case 'help.page.monit':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Monit Integration') . '</p>';
      return $output;

    default:
  }
}

/**
 * This functiion will return Drupal's core and installed contributed
 * modules available updates data, based on core Update module.
 *
 * @return array $updateData
 */
function monit_get_available_updates() {
  // Send modules updates data
  \Drupal::moduleHandler()->loadInclude('update', 'compare.inc');
  $updates = update_get_available(TRUE);
  $projects = update_calculate_project_data($updates);

  $updateData = [];
  $updateData["framework_info"] = get_update_object("drupal", $projects, $updates);
  $updateData["website_components"] = [];
  unset($projects["drupal"]);
  foreach ($projects as $key => $value) {
    $componentUpdateData = get_update_object($key, $projects, $updates);
    $updateData["website_components"][] = $componentUpdateData;
  }

  return $updateData;
}

/**
 * This helper function will return the available updates/releases data
 * of a specific project.
 *
 * @param string $project_name
 * @param array $projects
 * @param array $updates
 * @return array $updateData
 */
function get_update_object($project_name, $projects, $updates) {
  if(!$projects[$project_name]) return false;
  $updateTypes = [
    "1" => "NOT_SECURE",
    "2" => "REVOKED",
    "3" => "NOT_SUPPORTED",
    "4" => "NOT_CURRENT",
    "5" => "CURRENT",
  ];
  $updateType = "UPDATE_UNKNOWN";
  if($updateTypes[$projects[$project_name]["status"]]){
    $updateType = $updateTypes[$projects[$project_name]["status"]];
  }
  $updateData = [
    "title" => $projects[$project_name]['title'],
    "name" => $projects[$project_name]['name'],
    "type" => $updateType,
    "current_version" => $projects[$project_name]["existing_version"],
    "latest_version" => $projects[$project_name]["latest_version"],
    "recommended_version" => $projects[$project_name]["latest_version"],
    "available_releases" => [],
    "security_updates" => [],
  ];

  foreach ($updates[$project_name]["releases"] as $key => $value) {
    $updateData["available_releases"][] = [
      "name" => $value["name"],
      "version" => $value["version"],
      "attributes" => [
        "terms" => $value["terms"],
        "security" => $value["security"],
      ]
    ];
  }

  if(isset($projects[$project_name]["security_updates"])) {
    foreach ($projects[$project_name]["security_updates"] as $key => $value) {
      $updateData["security_updates"][] = [
        "name" => $value["name"],
        "version" => $value["version"],
        "attributes" => [
          "terms" => $value["terms"],
          "security" => $value["security"],
        ]
      ];
    }
  }

  return $updateData;
}
